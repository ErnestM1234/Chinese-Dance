### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Article {
  createdAt: DateTime!
  id: Int!
  postedBy: User
  text: String!
  title: String!
}

input ArticleOrderByInput {
  createdAt: Sort
  text: Sort
  title: Sort
}

type Articles {
  articles: [Article!]!
  count: Int!
  id: ID
}

type AuthPayload {
  token: String!
  user: User!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Feed {
  count: Int!
  id: ID
  links: [Link!]!
}

type Link {
  createdAt: DateTime!
  description: String!
  id: Int!
  postedBy: User
  url: String!
  voters: [User!]!
}

input LinkOrderByInput {
  createdAt: Sort
  description: Sort
  url: Sort
}

type Mutation {
  create(text: String!, title: String!): Article!
  delete(id: Int!): Article!
  login(email: String!, password: String!): AuthPayload!
  post(description: String!, url: String!): Link!
  signup(email: String!, name: String!, password: String!): AuthPayload!
  update(id: Int!, text: String!, title: String!): Article!
  vote(linkId: Int!): Vote
}

type Query {
  article(id: Int!): Article
  articles(filter: String, orderBy: [ArticleOrderByInput!], skip: Int, take: Int): Articles!
  feed(filter: String, orderBy: [LinkOrderByInput!], skip: Int, take: Int): Feed!
  user(id: Int!): User
}

enum Sort {
  asc
  desc
}

type User {
  bio: String
  email: String!
  id: Int!
  links: [Link!]!
  name: String!
  votes: [Link!]!
}

type Vote {
  link: Link!
  user: User!
}
